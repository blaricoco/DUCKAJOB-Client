/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 ./duck2.gltf
Author: Ikki_3d (https://sketchfab.com/ikki_3d)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/rubber-duck-f1de4fc390db4266a509b9739350512a
Title: Rubber duck
*/

import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';

export function DuckModel2({ mousePosition }: any) {
  // @ts-ignore
  const { nodes, materials } = useGLTF('/duck2.gltf');

  const modelRef = React.useRef<any>();

  useFrame((state: any) => {
    const model = modelRef.current;
    if (mousePosition && model) {
      model.position.y = model.position.y + Math.sin(state.clock.getElapsedTime() * 2) * 0.005;
      model.rotation.x = (mousePosition.y - window.innerHeight / 2) / 2000 + 0.03;
      model.rotation.y = (mousePosition.x - window.innerWidth / 2) / 2000 + 0.12;
    }
    // console.log(mousePosition);
  });
  return (
    <group ref={modelRef} dispose={null} scale={0.013} position={[-0.2, -1.6, 0]}>
      <group rotation={[-Math.PI / 2, 0, -0.8]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <mesh
            geometry={nodes.defaultMaterial.geometry}
            material={materials.material}
            position={[0, 173.29, -2.92]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={[0.9, 1.09, 1.02]}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('/duck2.gltf');
